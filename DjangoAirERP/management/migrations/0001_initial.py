# Generated by Django 4.1.5 on 2023-01-30 03:28

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import management.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Airplane',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=200, unique=True)),
                ('comfort_places', models.IntegerField(validators=[django.core.validators.MinValueValidator(limit_value=1, message='Minimum number of places 1.')])),
                ('economy_places', models.IntegerField(validators=[django.core.validators.MinValueValidator(limit_value=1, message='Minimum number of places 1.')])),
                ('date_registration', models.DateField(auto_now_add=True)),
                ('busy_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Airport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=20)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('percents', models.CharField(max_length=4)),
                ('valid_until', models.DateField()),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Flight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departure_date', models.DateTimeField(validators=[management.validators.min_date_validator])),
                ('date_arrival', models.DateTimeField(validators=[management.validators.min_date_validator])),
                ('flight_time', models.CharField(max_length=20)),
                ('date_registration', models.DateTimeField(auto_now_add=True)),
                ('price', models.FloatField(validators=[django.core.validators.MinValueValidator(limit_value=1, message='Minimum number of seats 1.')])),
            ],
            options={
                'ordering': ('-date_registration',),
            },
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option', models.CharField(max_length=100)),
                ('price', models.FloatField(validators=[django.core.validators.MinValueValidator(limit_value=1, message='Minimum number of seats 1.')])),
                ('weight', models.IntegerField(null=True)),
                ('service_type', models.CharField(choices=[('extra', 'Extra'), ('included', 'Included')], max_length=8, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reservation', models.BooleanField(default=False)),
                ('date_reservation', models.DateTimeField(null=True)),
                ('first_name', models.CharField(max_length=30, null=True, validators=[django.core.validators.MinLengthValidator(limit_value=1, message='Minimum length 1 character.')])),
                ('last_name', models.CharField(max_length=30, null=True, validators=[django.core.validators.MinLengthValidator(limit_value=1, message='Minimum length 1 character.')])),
                ('years_old', models.CharField(choices=[('adult', 'Adult'), ('child ', 'Child'), ('infant', 'Infant')], max_length=8, null=True)),
                ('place', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(limit_value=1, message='Minimum number of seats 1.')])),
                ('price', models.FloatField(validators=[django.core.validators.MinValueValidator(limit_value=1, message='Minimum number of seats 1.')])),
                ('price_with_options', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(limit_value=1, message='Minimum number of seats 1.')])),
                ('date_birthday', models.DateField(null=True)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], default=None, max_length=6, null=True)),
                ('document_no', models.CharField(max_length=8, null=True, validators=[django.core.validators.RegexValidator(message='The form is filled in with the first two letters and six digits.', regex='[A-Za-z]{2}[0-9]{6}')])),
                ('payment_status', models.BooleanField(default=False)),
                ('check_in', models.BooleanField(default=False)),
                ('self_check_in', models.BooleanField(default=False)),
                ('place_type', models.CharField(choices=[('economy', 'Economy'), ('comfort', 'Comfort')], max_length=7)),
                ('luggage_weight', models.IntegerField(null=True)),
                ('boarding_time', models.DateTimeField(null=True)),
                ('discount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='discounts', to='management.discount')),
                ('extra_options', models.ManyToManyField(blank=True, related_name='extra_options', to='management.option')),
                ('flight', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='management.flight')),
                ('included_options', models.ManyToManyField(blank=True, related_name='included_options', to='management.option')),
            ],
        ),
    ]
